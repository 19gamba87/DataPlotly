# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Matteo Ghetta
# This file is distributed under the same license as the DataPlotly package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DataPlotly 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-10-03 15:30+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/basic_usage.rst:4
msgid "DataPlotly Basic Usage"
msgstr ""

#: ../../source/basic_usage.rst:5
msgid "DataPlotly interface has been designed in order to be simple but, at the same time, complete and with many options and customizations available."
msgstr ""

#: ../../source/basic_usage.rst:8
msgid "Creating a plot is just easy as it sound: choose all the settings, ``x`` and ``y`` column, colors, labels, etc and press the ``Create Plot`` button. The plot is immediatly shown in the plot canvas."
msgstr ""

#: ../../source/basic_usage.rst:12
msgid "If you want to change some setting, e.g. the marker color or size, the ``x`` column, go ahead and the hit the ``Update Plot`` button: the plot is then updated in the plot canvas."
msgstr ""

#: ../../source/basic_usage.rst:19
msgid "Add a Plot"
msgstr ""

#: ../../source/basic_usage.rst:20
msgid "DataPlotly workflow is pretty straightforward:"
msgstr ""

#: ../../source/basic_usage.rst:22
msgid "choose the plot type (1)"
msgstr ""

#: ../../source/basic_usage.rst:23
msgid "set the layer and the field(s) you want to plot (2)"
msgstr ""

#: ../../source/basic_usage.rst:24
msgid "show the plot with the ``Draw Plot`` button (3)"
msgstr ""

#: ../../source/basic_usage.rst:29
msgid "If you want to start again, just click the ``Clean Plot Canvas`` button and the plot canvas will be empty."
msgstr ""

#: ../../source/basic_usage.rst:34
msgid "Multi Plots"
msgstr ""

#: ../../source/basic_usage.rst:35
msgid "DataPlotly allows the creation of many different plots. Plots can be shown on the same plot canvas (**overlapping**) or each plot can be drawn in different rows or columns (**subplots**)."
msgstr ""

#: ../../source/basic_usage.rst:40
msgid "Overlapping Plots"
msgstr ""

#: ../../source/basic_usage.rst:41
msgid "You can add as many plots as you want in the same plot view. Plot types can be different and also the source layer can be different."
msgstr ""

#: ../../source/basic_usage.rst:44
msgid "results can be very strange depending on the plot type and on the fields you choose. Be careful!"
msgstr ""

#: ../../source/basic_usage.rst:46
msgid "To add other plot just repeat the steps of :ref:`add_plot` by chosing different plot types and/or just different layer fields, etc.."
msgstr ""

#: ../../source/basic_usage.rst:49
msgid "In the following picture, same plot type (scatterplot) and different fields of the same layer:"
msgstr ""

#: ../../source/basic_usage.rst:55
msgid "The following pictures shows 2 different overlapping plot types (boxplot and scatterplot):"
msgstr ""

#: ../../source/basic_usage.rst:63
msgid "Subplots"
msgstr ""

#: ../../source/basic_usage.rst:64
msgid "You can choose to separate the plots in different plot canvas. It is particulary useful when the scales are very different or when overlapping too many data results in a messy plot canvas."
msgstr ""

#: ../../source/basic_usage.rst:68
msgid "You just have to choose the plots and the fields as described in the section :ref:`add_plot` but you have to specify the ``SubPlots`` parameter from the combobox and choose if the plots have to be drawn in rows (default parameter) or in columns."
msgstr ""

#: ../../source/basic_usage.rst:73
msgid "The following pictures show plots in rows and in columns:"
msgstr ""

#: ../../source/basic_usage.rst:88
msgid "Save Plot"
msgstr ""

#: ../../source/basic_usage.rst:89
msgid "Saving a plot, technically the plot canvas, is very simple. You can choose to save the plot as a ``png`` image or as ``html`` file."
msgstr ""

#: ../../source/basic_usage.rst:92
msgid "saving the image as ``html`` file will keep the interactivity of the plot"
msgstr ""

#: ../../source/basic_usage.rst:94
msgid "You just have to click on the correct button and choose the path where to save the image, both static or interactive."
msgstr ""

#: ../../source/basic_usage.rst:102
msgid "Raw Plot Code"
msgstr ""

#: ../../source/basic_usage.rst:103
msgid "In addition to saving the plot as image or html file (see :ref:`save`) you can also copy the raw ``html`` code of the plot and embed it somewhere else."
msgstr ""

#: ../../source/basic_usage.rst:106
msgid "A good place where to copy/paste the raw code is the html frame of the print composer of QGIS."
msgstr ""

#: ../../source/basic_usage.rst:109
msgid "In order to copy the plot code, after the plot creation, just go in the ``Raw Plot`` tab: here you can see a long string. **Right Click** on the tab and choose ``Select All``, then **Right Click** again and choose ``Copy`` (of course you can use keyboard shortcuts ``Ctrl + A`` for select all and ``Ctrl + C`` for copy):"
msgstr ""

#: ../../source/basic_usage.rst:118
msgid "Then you have your plot code copied in memory: you just have to choose where to paste it."
msgstr ""

#: ../../source/basic_usage.rst:121
msgid "In the following example, the ``html code`` is pasted in the **html frame** of the print composer:"
msgstr ""

#: ../../source/basic_usage.rst:124
msgid "open the print composer and add an ``html frame`` (1)"
msgstr ""

#: ../../source/basic_usage.rst:125
msgid "paste the code in the ``Source`` space (2)"
msgstr ""

#: ../../source/basic_usage.rst:126
msgid "refresh the ``html`` code (3)"
msgstr ""

#: ../../source/basic_usage.rst:127
msgid "results will be shown in the frame (4)"
msgstr ""

#: ../../source/basic_usage.rst:134
msgid "Layer fields tips"
msgstr ""

#: ../../source/basic_usage.rst:136
msgid "Using Expressions"
msgstr ""

#: ../../source/basic_usage.rst:137
msgid "DataPlotly supports all the fields type (integers, floats, text, etc..) and will elaborate the data so that they can be correctly displayed."
msgstr ""

#: ../../source/basic_usage.rst:140
msgid "Thanks to the QGIS API and custom widget, it is possible to add also **Expressions** instead of pure layer fields (e.g. ``field + 10``, ``field1 * field2``, etc)."
msgstr ""

#: ../../source/basic_usage.rst:143
msgid "You can use the Expression editor to add complex expressions (e.g. ``(field1 + 10) * (field2 * 10)``) or you can type the expression directly in the combo box. Expressions are evaluated *on the fly*, so if the string is red, then the expression is not valid."
msgstr ""

#: ../../source/basic_usage.rst:151
msgid "Use only selected features"
msgstr ""

#: ../../source/basic_usage.rst:152
msgid "Another very handy options is to work only with the selected features on the layer."
msgstr ""

#: ../../source/basic_usage.rst:155
msgid "Just check the ``Use only selected features`` check box and only the attributes of the selected features will be taken."
msgstr ""

